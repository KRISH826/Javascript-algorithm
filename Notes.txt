How to represent complexity
----------------------------------------------------------------
asymptotic notations
---------------------------------------
Mathematical tools to represent time and space complexity

- BIG-O notation --worst case sensitivity
- OMEGA notation -- best case sensitivity
- Theta notation -- average case complexity


what is BIG-O notations ?
--------------------------------


OBJECTS - BIG - O notation
--------------------------------
an object is a collection of key values pairs

- insert - O (1) - constant time complexity
- remove - O (1) - constant time complexity
- access - O (1) - constant time complexity
- search - O (n) - linear time complexity
- Object.keys()  - O(n) - linear time complexity
- Object.values() - O(n) - linear time complexity
- Object.entries() - O(n) - linear time complexity


ARRAY - BIG - O notation
----------------------------------------------------------------
insert / remove at end - O(1) - constant time complexity
insert / remove at beginning - O(n) - linear time complexity
access - O(1) - constant time complexity
search - O(n) - linear time complexity
push / pop - O(1) - constant time complexity
shift / unshift / concat / slice / splice - O(n) - constant time complexity
foreach / map/ filter / reduce - O(n) - constant time complexity


MATH Algorithms
--------------------------------
fibonacci sequence 
factorial of a number
prime number
power of two
recursion
fibonacci sequence with redursion
factorial of a number with recursion


fib = 3,
0,1,1